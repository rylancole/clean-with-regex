{"version":3,"sources":["components/SimpleInput.js","App.js","index.js"],"names":["SimpleInput","value","onChange","onClear","name","inputRef","useRef","inputId","label","replace","c","toUpperCase","FormControl","fullWidth","InputLabel","htmlFor","OutlinedInput","id","endAdornment","InputAdornment","position","IconButton","onClick","current","focus","edge","App","useState","findValue","setFindValue","replaceValue","setReplaceValue","dataValue","setDataValue","Box","className","component","noValidate","autoComplete","Grid","container","justifyContent","alignItems","spacing","item","xs","e","target","TextField","multiline","rows","Button","variant","navigator","clipboard","writeText","type","preventDefault","re","RegExp","replaceAll","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySA2CeA,EA/BK,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACzCC,EAAWC,iBAAO,MAElBC,EAAO,UAAMH,EAAN,UACPI,EAAmBJ,EANCK,QAAQ,OAAO,SAACC,GAAD,OAAOA,EAAEC,iBAYlD,OACE,eAACC,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,cAACC,EAAA,EAAD,CAAYC,QAASR,EAArB,SAA+BC,IAC/B,cAACQ,EAAA,EAAD,CACEC,GAAIV,EACJC,MAAOA,EACPH,SAAUA,EACVJ,MAAOA,EACPC,SAAUA,EACVgB,aACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACE,cAACC,EAAA,EAAD,CAAYC,QAfF,WAClBnB,IACAE,EAASkB,QAAQC,SAayBC,KAAK,MAAvC,SACE,cAAC,IAAD,cCiCCC,EA9DH,WACV,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAYA,OACE,cAACC,EAAA,EAAD,CAAKC,UAAU,MAAMC,UAAU,OAAOC,YAAU,EAACC,aAAa,MAA9D,SACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAASC,WAAW,SAASC,QAAS,EAArE,UACE,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CACEzC,KAAK,OACLH,MAAO2B,EACP1B,SAAU,SAAC4C,GAAD,OAAOjB,EAAaiB,EAAEC,OAAO9C,QACvCE,QAAS,kBAAM0B,EAAa,SAGhC,cAACU,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CACEzC,KAAK,UACLH,MAAO6B,EACP5B,SAAU,SAAC4C,GAAD,OAAOf,EAAgBe,EAAEC,OAAO9C,QAC1CE,QAAS,kBAAM4B,EAAgB,SAGnC,cAACQ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAf,SACE,cAACG,EAAA,EAAD,CACE/B,GAAG,gBACHT,MAAM,OACNyC,WAAS,EACTC,KAAM,GACNrC,WAAS,EACTZ,MAAO+B,EACP9B,SAAU,SAAC4C,GAAD,OAAOb,EAAaa,EAAEC,OAAO9C,YAG3C,eAACsC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACD,QAAS,EAAGF,eAAe,WAAWI,GAAI,EAA/D,UACE,cAACN,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAQC,QAAQ,YAAY9B,QApCnB,WACjB+B,UAAUC,UAAUC,UAAUvB,IAmCtB,yBAIF,cAACO,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAQK,KAAK,SAASJ,QAAQ,YAAY9B,QA/C/B,SAACwB,GACpBA,EAAEW,iBACF,IAAIC,EAAK,IAAIC,OAAO/B,EAAW,KAC/BK,EAAaD,EAAU4B,WAAWF,EAAI5B,KA4C9B,2BCpDZ+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.67ae2a8a.chunk.js","sourcesContent":["import { useRef } from \"react\";\nimport {\n  InputAdornment,\n  IconButton,\n  OutlinedInput,\n  InputLabel,\n  FormControl,\n} from \"@mui/material\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\n\nconst capitalize = (s) => s.replace(/^\\w/, (c) => c.toUpperCase());\n\nconst SimpleInput = ({ value, onChange, onClear, name }) => {\n  const inputRef = useRef(null);\n\n  const inputId = `${name}-input`;\n  const label = capitalize(name);\n\n  const handleClear = () => {\n    onClear();\n    inputRef.current.focus();\n  };\n  return (\n    <FormControl fullWidth>\n      <InputLabel htmlFor={inputId}>{label}</InputLabel>\n      <OutlinedInput\n        id={inputId}\n        label={label}\n        inputRef={inputRef}\n        value={value}\n        onChange={onChange}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton onClick={handleClear} edge=\"end\">\n              <ClearIcon />\n            </IconButton>\n          </InputAdornment>\n        }\n      />\n    </FormControl>\n  );\n};\n\nexport default SimpleInput;\n","import \"./App.scss\";\nimport { useState } from \"react\";\nimport { Button, Box, Grid, TextField } from \"@mui/material\";\nimport SimpleInput from \"./components/SimpleInput\";\n\nconst App = () => {\n  const [findValue, setFindValue] = useState(\"\");\n  const [replaceValue, setReplaceValue] = useState(\"\");\n  const [dataValue, setDataValue] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let re = new RegExp(findValue, \"g\");\n    setDataValue(dataValue.replaceAll(re, replaceValue));\n  };\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(dataValue);\n  };\n\n  return (\n    <Box className=\"App\" component=\"form\" noValidate autoComplete=\"off\">\n      <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n        <Grid item xs={4}>\n          <SimpleInput\n            name=\"find\"\n            value={findValue}\n            onChange={(e) => setFindValue(e.target.value)}\n            onClear={() => setFindValue(\"\")}\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <SimpleInput\n            name=\"replace\"\n            value={replaceValue}\n            onChange={(e) => setReplaceValue(e.target.value)}\n            onClear={() => setReplaceValue(\"\")}\n          />\n        </Grid>\n        <Grid item xs={8}>\n          <TextField\n            id=\"data-textarea\"\n            label=\"Data\"\n            multiline\n            rows={10}\n            fullWidth\n            value={dataValue}\n            onChange={(e) => setDataValue(e.target.value)}\n          />\n        </Grid>\n        <Grid container item spacing={2} justifyContent=\"flex-end\" xs={8}>\n          <Grid item>\n            <Button variant=\"contained\" onClick={handleCopy}>\n              Copy data\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button type=\"submit\" variant=\"contained\" onClick={handleSubmit}>\n              Go\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}